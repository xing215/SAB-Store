services:
  # SAB Lanyard MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: sablanyard_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-minipreorder}
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
    expose:
      - "27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - sablanyard_network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # SAB Lanyard MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: sablanyard_minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
    expose:
      - "9000"
    volumes:
      - minio_data:/data
    networks:
      - sablanyard_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # SAB Lanyard Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    pull_policy: always
    container_name: sablanyard_backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${BACKEND_PORT:-5000}
      BASE_URL: ${BACKEND_URL:-http://localhost:5000}
      MONGODB_URI: ${MONGODB_URI:-mongodb://admin:password123@mongodb:27017/minipreorder?authSource=admin}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-sab@fit.hcmus.edu.vn}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      APPSCRIPT_URL: ${APPSCRIPT_URL:-your-appscript-url-here}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-minio}
      MINIO_PORT: ${MINIO_PORT:-9000}
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-sablanyard}
      MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
      TZ: ${TZ:-Asia/Ho_Chi_Minh}
    expose:
      - "5000"
    depends_on:
      mongodb:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - backend_uploads:/app/uploads
    networks:
      - sablanyard_network

  # SAB Lanyard Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:5000}
    pull_policy: always
    container_name: sablanyard_frontend
    restart: unless-stopped
    expose:
      - 80
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sablanyard_network

volumes:
  mongodb_data:
  minio_data:
  backend_uploads:


networks:
  sablanyard_network:
    driver: bridge
